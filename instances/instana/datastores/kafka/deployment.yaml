apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka
    spec:
      serviceAccountName: instana-datastore-sa
      imagePullSecrets:
      - name: instana-pullsecret
      initContainers:
      - image: busybox
        name: cleanup
        resources: {}
        volumeMounts:
          - mountPath: /mnt/data
            name: kafka-data
        command:
          - sh
          - -c
          - "rm -rf /mnt/data/lost+found"
      containers:
      - image: containers.instana.io/instana/release/product/kafka:2.7.2_v0.17.0
        name: kafka
        resources: {}
        env:
          - name: ZOOKEEPER_HOST
            value: zookeeper-service
          - name: ADVERTISED_LISTENER
            value: PLAINTEXT://kafka-service.instana-core.svc.cluster.local:9092
        ports:
          - containerPort: 9092
        volumeMounts:
          - mountPath: /mnt/log
            name: kafka-logs
          - mountPath: /mnt/data
            name: kafka-data
        securityContext:
          runAsUser: 0
      volumes:
        - name: kafka-logs
          persistentVolumeClaim:
            claimName: kafka-logs
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data
status: {}
